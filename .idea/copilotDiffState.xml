<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/../facturacion-inventory-android-kotlin/app/src/main/java/com/example/data/auth/ApiService.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/../facturacion-inventory-android-kotlin/app/src/main/java/com/example/data/auth/ApiService.kt" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.data.auth&#10;&#10;import retrofit2.http.Body&#10;import retrofit2.http.POST&#10;import retrofit2.http.GET&#10;import retrofit2.Response&#10;&#10;&#10;interface ApiService {&#10;    @POST(&quot;/api/auth/register&quot;)&#10;    suspend fun register(@Body req: RegisterRequest): Response&lt;LoginResponse&gt;&#10;&#10;    // Fallback: endpoint que acepta un body genérico (map) por compatibilidad con diferentes APIs&#10;    @POST(&quot;/api/auth/register&quot;)&#10;    suspend fun registerMap(@Body body: Map&lt;String, @kotlin.jvm.JvmSuppressWildcards Any?&gt;): Response&lt;LoginResponse&gt;&#10;&#10;    @POST(&quot;/api/auth/login&quot;)&#10;    suspend fun login(@Body req: LoginRequest): Response&lt;LoginResponse&gt;&#10;&#10;    @POST(&quot;/api/auth/login&quot;)&#10;    suspend fun loginMap(@Body body: Map&lt;String, String&gt;): Response&lt;LoginResponse&gt;&#10;&#10;    @POST(&quot;/api/auth/refresh&quot;)&#10;    suspend fun refresh(@Body body: Map&lt;String, String&gt;): Response&lt;RefreshResponse&gt;&#10;&#10;    @POST(&quot;/api/auth/logout&quot;)&#10;    suspend fun logout(@Body body: Map&lt;String, String&gt;): Response&lt;Unit&gt;&#10;&#10;    // Nuevo endpoint: revoca todos los refresh tokens del usuario autenticado (usa Authorization)&#10;    @POST(&quot;/api/auth/revoke-all&quot;)&#10;    suspend fun revokeAll(): Response&lt;Unit&gt;&#10;&#10;    // Nuevo endpoint: obtener perfil del usuario autenticado&#10;    @GET(&quot;/api/auth/me&quot;)&#10;    suspend fun me(): Response&lt;Map&lt;String, @JvmSuppressWildcards Any?&gt;&gt;&#10;&#10;    // OAuth endpoints (según docs/openapi.yaml)&#10;    @POST(&quot;/api/auth/oauth/google&quot;)&#10;    suspend fun oauthGoogle(@Body body: Map&lt;String, String&gt;): Response&lt;LoginResponse&gt;&#10;&#10;    @POST(&quot;/api/auth/oauth/facebook&quot;)&#10;    suspend fun oauthFacebook(@Body body: Map&lt;String, String&gt;): Response&lt;LoginResponse&gt;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>